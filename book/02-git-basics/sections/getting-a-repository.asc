[[_getting_a_repo]]
=== Mendapatkan Repository Git

Anda bisa mendapatkan _project_ Git menggunakan dua pendekatan utama.
Pendekatan yang pertama mengambil _project_ atau direktori yang ada dan mengimpornya ke Git.
Pendekatan yang kedua dengan melakukan _clone_ ke repositori Git yang ada dari server lain.

==== Menginisialisasi Repositori di Direktori yang Ada

Jika Anda mulai melacak _project_ yang ada di Git, Anda perlu masuk ke direktori dan jenis proyek

[source,console]
----
$ git init
----

Ini akan membuat sub direktori baru bernama `.git` yang berisi semua file repositori yang diperlukan - kerangka penyimpanan repositori Git.
Pada titik ini, tidak ada yang dilacak dalam _project_ Anda.
(Lihat <<_git_internals>> untuk informasi lebih lanjut tentang file apa saja yang terdapat di direktori `.git` yang baru saja Anda buat.)(((git commands, init)))

Jika Anda ingin memulai mengendalikan-versi file yang ada (berlawanan dengan direktori kosong), Anda mungkin harus mulai melacak file-file tersebut dan melakukan _commit_ awal.
Anda bisa mencapainya dengan beberapa perintah `git add` yang menentukan file yang ingin Anda lacak, diikuti dengan `git commit`:

[source,console]
----
$ git add *.c
$ git add LICENSE
$ git commit -m 'initial project version'
----

Kita akan membahas apa yang diperintahkan _commands_ ini hanya dalam satu menit.
Pada titik ini, Anda memiliki repositori Git dengan file yang dilacak dan _commit_ awal.

[[_git_cloning]]
==== Menduplikat Repositori yang Ada

Jika Anda ingin mendapatkan duplikat repositori Git yang ada - misalnya, sebuah _project_ yang ingin Anda kontribusikan - _command_ yang Anda butuhkan adalah `git clone`.
Jika Anda terbiasa dengan sistem VCS lain seperti _Subversion_, Anda akan melihat bahwa _command_-nya adalah "clone" dan bukan "checkout".
Setiap versi setiap file untuk sejarah _project_ ditarik secara default saat Anda menjalankan `git clone`.
Sebenarnya, jika _disk server_ Anda rusak, Anda dapat sering menggunakan hampir semua duplikat pada klien mana pun untuk mengatur server kembali ke keadaan saat duplikat (Anda mungkin kehilangan beberapa kait sisi server dan semacamnya, tapi semua data berversi akan ada di sana - lihat <<_git_on_the_server>> untuk lebih jelasnya).

Anda menduplikat sebuah repositori dengan `git clone [url]`. (((git commands, clone)))
Misalnya, jika Anda ingin menduplikat pustaka yang terhubung dengan Git yang disebut libgit2, Anda dapat melakukannya seperti ini:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2
----

Ini membuat sebuah direktori bernama ``libgit2``, menginisialisasi direktori `.git` di dalamnya, menarik semua data untuk repositori tersebut, dan memeriksa salinan tugas versi terbaru.
Jika Anda masuk ke direktori `libgit2` yang baru, Anda akan melihat file _project_ di sana, siap untuk dikerjakan atau digunakan.
Jika Anda ingin menduplikat repositori ke dalam direktori yang bernama sesuatu selain ``libgit2``, Anda dapat menentukannya sebagai opsi baris _command_ berikutnya:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2 mylibgit
----

_Command_ itu melakukan hal yang sama seperti yang sebelumnya, tapi direktori targetnya disebut 'mylibgit`.

Git memiliki sejumlah protokol transfer yang berbeda yang dapat Anda gunakan.
Contoh sebelumnya menggunakan protokol `https://`, tetapi Anda juga bisa melihat `git://` atau `user@server:path/to/repo.git`, yang menggunakan protokol transfer SSH.
<<_git_on_the_server>> akan memperkenalkan semua pilihan yang tersedia yang bisa diatur server untuk mengakses repositori Git Anda dengan membahas kelebihan dan kekurangan masing-masing pilihan.
